# -*- mode: snippet -*-
# contributor: Translated to yasnippet by sublime-snippet import
# key: community.general.proxmox_kvm
# group: community.general
# name: Management of Qemu(KVM) Virtual Machines in Proxmox VE cluster
# --
- name: ${1:Management of Qemu(KVM) Virtual Machines in Proxmox VE cluster}
  community.general.proxmox_kvm:
    archive: ${2:# Specify a path to an archive to restore (instead of creating or cloning a VM)}
    acpi: ${3:# Specify if ACPI should be enabled/disabled}
    agent: ${4:# Specify if the QEMU Guest Agent should be enabled/disabled}
    args: ${5:# Pass arbitrary arguments to kvm}
    autostart: ${6:# Specify if the VM should be automatically restarted after crash (currently ignored in PVE API)}
    balloon: ${7:# Specify the amount of RAM for the VM in MB}
    bios: ${8:# Specify the BIOS implementation}
    boot: ${9:# Specify the boot order -> boot on floppy C(a), hard disk C(c), CD-ROM C(d), or network C(n)}
    bootdisk: ${10:# Enable booting from specified disk}
    cicustom: ${11:# cloud-init: Specify custom files to replace the automatically generated ones at start}
    cipassword: ${12:# cloud-init: password of default user to create}
    citype: ${13:# cloud-init: Specifies the cloud-init configuration format}
    ciuser: ${14:# cloud-init: username of default user to create}
    clone: ${15:# Name of VM to be cloned}
    cores: ${16:# Specify number of cores per socket}
    cpu: ${17:# Specify emulated CPU type}
    cpulimit: ${18:# Specify if CPU usage will be limited}
    cpuunits: ${19:# Specify CPU weight for a VM}
    delete: ${20:# Specify a list of settings you want to delete}
    description: ${21:# Specify the description for the VM}
    digest: ${22:# Specify if to prevent changes if current configuration file has different SHA1 digest}
    efidisk0: ${23:# Specify a hash/dictionary of EFI disk options}
    force: ${24:# Allow to force stop VM}
    format: ${25:# Target drive's backing file's data format}
    freeze: ${26:# Specify if PVE should freeze CPU at startup (use 'c' monitor command to start execution)}
    full: ${27:# Create a full copy of all disk}
    hostpci: ${28:# Specify a hash/dictionary of map host pci devices into guest}
    hotplug: ${29:# Selectively enable hotplug features}
    hugepages: ${30:# Enable/disable hugepages memory}
    ide: ${31:# A hash/dictionary of volume used as IDE hard disk or CD-ROM}
    ipconfig: ${32:# cloud-init: Set the IP configuration}
    keyboard: ${33:# Sets the keyboard layout for VNC server}
    kvm: ${34:# Enable/disable KVM hardware virtualization}
    localtime: ${35:# Sets the real time clock to local time}
    lock: ${36:# Lock/unlock the VM}
    machine: ${37:# Specifies the Qemu machine type}
    memory: ${38:# Memory size in MB for instance}
    migrate: ${39:# Migrate the VM to I(node) if it is on another node}
    migrate_downtime: ${40:# Sets maximum tolerated downtime (in seconds) for migrations}
    migrate_speed: ${41:# Sets maximum speed (in MB/s) for migrations}
    name: ${42:# Specifies the VM name}
    nameservers: ${43:# cloud-init: DNS server IP address(es)}
    net: ${44:# A hash/dictionary of network interfaces for the VM}
    newid: ${45:# VMID for the clone}
    numa: ${46:# A hash/dictionaries of NUMA topology}
    numa_enabled: ${47:# Enables NUMA}
    onboot: ${48:# Specifies whether a VM will be started during system bootup}
    ostype: ${49:# Specifies guest operating system}
    parallel: ${50:# A hash/dictionary of map host parallel devices}
    protection: ${51:# Enable/disable the protection flag of the VM}
    reboot: ${52:# Allow reboot}
    revert: ${53:# Revert a pending change}
    sata: ${54:# A hash/dictionary of volume used as sata hard disk or CD-ROM}
    scsi: ${55:# A hash/dictionary of volume used as SCSI hard disk or CD-ROM}
    scsihw: ${56:# Specifies the SCSI controller model}
    searchdomains: ${57:# cloud-init: Sets DNS search domain(s)}
    serial: ${58:# A hash/dictionary of serial device to create inside the VM}
    shares: ${59:# Rets amount of memory shares for auto-ballooning}
    skiplock: ${60:# Ignore locks}
    smbios: ${61:# Specifies SMBIOS type 1 fields}
    snapname: ${62:# The name of the snapshot}
    sockets: ${63:# Sets the number of CPU sockets}
    sshkeys: ${64:# cloud-init: SSH key to assign to the default user}
    startdate: ${65:# Sets the initial date of the real time clock}
    startup: ${66:# Startup and shutdown behavior}
    state: ${67:# Indicates desired state of the instance}
    storage: ${68:# Target storage for full clone}
    tablet: ${69:# Enables/disables the USB tablet device}
    tags: ${70:# List of tags to apply to the VM instance}
    target: ${71:# Target node}
    tdf: ${72:# Enables/disables time drift fix}
    template: ${73:# Enables/disables the template}
    timeout: ${74:# Timeout for operations}
    update: ${75:# If C(true), the VM will be updated with new value}
    vcpus: ${76:# Sets number of hotplugged vcpus}
    vga: ${77:# Select VGA type}
    virtio: ${78:# A hash/dictionary of volume used as VIRTIO hard disk}
    watchdog: ${79:# Creates a virtual hardware watchdog device}
    proxmox_default_behavior: ${80:# As of community}
    api_host: ${81:# Specify the target host of the Proxmox VE cluster}
    api_user: ${82:# Specify the user to authenticate with}
    api_password: ${83:# Specify the password to authenticate with}
    api_token_id: ${84:# Specify the token ID}
    api_token_secret: ${85:# Specify the token secret}
    validate_certs: ${86:# If C(false), SSL certificates will not be validated}
    vmid: ${87:# Specifies the instance ID}
    node: ${88:# Proxmox VE node on which to operate}
    pool: ${89:# Add the new VM to the specified pool}
