# -*- mode: snippet -*-
# contributor: Translated to yasnippet by sublime-snippet import
# key: community.postgresql.postgresql_slot
# group: community.postgresql
# name: Add or remove replication slots from a PostgreSQL database
# --
- name: ${1:Add or remove replication slots from a PostgreSQL database}
  community.postgresql.postgresql_slot:
    name: ${2:# Name of the replication slot to add or remove}
    slot_type: ${3:# Slot type}
    state: ${4:# The slot state}
    immediately_reserve: ${5:# Optional parameter that when C(true) specifies that the LSN for this replication slot be reserved immediately, otherwise the default, C(false), specifies that the LSN is reserved on the first connection from a streaming replication client}
    output_plugin: ${6:# All logical slots must indicate which output plugin decoder they're using}
    db: ${7:# Name of database to connect to}
    session_role: ${8:# Switch to session_role after connecting}
    trust_input: ${9:# If C(false), check the value of I(session_role) is potentially dangerous}
    login_user: ${10:# The username this module should use to establish its PostgreSQL session}
    login_password: ${11:# The password this module should use to establish its PostgreSQL session}
    login_host: ${12:# Host running the database}
    login_unix_socket: ${13:# Path to a Unix domain socket for local connections}
    port: ${14:# Database port to connect to}
    ssl_mode: ${15:# Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server}
    ca_cert: ${16:# Specifies the name of a file containing SSL certificate authority (CA) certificate(s)}
    ssl_cert: ${17:# Specifies the file name of the client SSL certificate}
    ssl_key: ${18:# Specifies the location for the secret key used for the client certificate}
    connect_params: ${19:# Any additional parameters to be passed to libpg}
